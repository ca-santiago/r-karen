sink(file = "refs.bib", append = TRUE, type = c("output")),
toBibtex(citation("unbalanced")),
sink()
%%%%%%%%%%%%%%%%%%%%%%%%%% PARA CITAR PAQUETES DE RSTUDIO %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
citation("caret")
library("imbalance")  #### libreria variante SMOTE
library("smotefamily")
install.packages("remotes")
library("remotes")
library("imbalance")  #### libreria variante SMOTE
library("smotefamily")
install.packages("remotes")
library("remotes")
install.packages("remotes")
library("imbalance")  #### libreria variante SMOTE
library("smotefamily")
library("remotes")
library("imbalance")  #### libreria variante SMOTE
library("smotefamily")
library("remotes")
data("newthyroid1")
datos_1 <- newthyroid1
head(datos_1)
table(datos_1$Class)
imbalanceRatio(datos_1)
newMWMOTE <- mwmote(datos_1, numInstances = 145)
newMWMOTE
table(newMWMOTE$Class)
result <- rbind(datos_1, newMWMOTE)
table(result$Class)
newRACOG <- racog(datos_1, numInstances = 145)
table(newRACOG$Class)
datos_balanceados <- rbind(datos_1, newRACOG)
table(datos_balanceados$Class)
datos <- BDLSMOT
data("newthyroid1")
datos_1 <- newthyroid1
head(datos_1)
table(datos_1$Class)
imbalanceRatio(datos_1)
newRACOG <- racog(datos_1, numInstances = 145)
table(newRACOG$Class)
datos_balanceados <- rbind(datos_1, newRACOG)
table(datos_balanceados$Class)
data("newthyroid1")
datos_1 <- newthyroid1
head(datos_1)
table(datos_1$Class)
imbalanceRatio(datos_1)
newPDFOS <- pdfos(datos_1, numInstances = 145)
table(newRACOG$Class)
datos_balanceados <- rbind(datos_1, newRACOG)
table(datos_balanceados$Class)
######## RWO ###############
newRWO <- rwo(datos_1, numInstances = 145)
####### PDFOS #############
newPDFOS <- pdfos(datos_1, numInstances = 145)
table(newPDFOS$Class)
datos_balanceados <- rbind(datos_1, newPDFOS)
table(datos_balanceados$Class)
####### PDFOS #############
newPDFOS <- pdfos(datos_1, numInstances = 145)
table(newPDFOS$Class)
####### PDFOS #############
table(datos_1$Class)
newPDFOS <- pdfos(datos_1, numInstances = 145)
table(newPDFOS$Class)
datos_balanceados <- rbind(datos_1, newPDFOS)
table(datos_balanceados$Class)
######## RWO ###############
table(datos_1$Class)
newRWO <- rwo(datos_1, numInstances = 145)
table(newRWO$Class)
datos_balanceados <- rbind(datos_1, newRWO)
table(datos_balanceados$Class)
newMWMOTE
######## WRACOG  #################
table(datos_1$Class)
newWRACOG <- wracog(datos_1, numInstances = 145)
table(datos_1$Class)
newDataset <- oversample(datos_1, method = "BLSMOTE")
table(datos_1$Class)
newDataset <- oversample(datos_1, ratio = 0.8, method = "BLSMOTE")
table(newDataset$Class)
table(datos_1$Class)
newDataset <- oversample(datos_1, ratio = 0.4, method = "BLSMOTE")
table(newDataset$Class)
table(datos_1$Class)
newDataset <- oversample(datos_1, ratio = 0.9, method = "BLSMOTE")
table(newDataset$Class)
newDataset <- oversample(datos_1, ratio = 1.0, method = "BLSMOTE")
newDataset <- oversample(datos_1, ratio = 0.99, method = "BLSMOTE")
newDataset <- oversample(datos_1, ratio = 0.9, method = "BLSMOTE")
table(newDataset$Class)
newDataset <- oversample(datos_1, ratio = 0.9, method = "BLSMOTE", wrapper = "C50")
table(newDataset$Class)
newDataset <- oversample(datos_1, ratio = 0.9, method = c("BLSMOTE", "SLMOTE")
newDataset <- oversample(datos_1, ratio = 0.9, method = c("BLSMOTE", "SLMOTE")
newDataset <- oversample(datos_1, ratio = 0.9, method = c("BLSMOTE", "SLMOTE")
table(newDataset$Class)
newDataset <- oversample(datos_1, ratio = 0.9, method = c("BLSMOTE", "SLMOTE"))
##### Borderline-SMOTE ######
table(datos_1$Class)
newDataset <- oversample(datos_1, ratio = 0.9, method = "BLSMOTE")
table(newDataset$Class)
newDataset <- oversample(datos_1, ratio = 1, method = "BLSMOTE")
##### Safe-SMOTE ######
table(datos_1$Class)
newDataset <- oversample(datos_1, ratio = 0.9, method = "SLMOTE")
table(newDataset$Class)
newDataset <- oversample(datos_1, ratio = 0.8, method = "SLMOTE")
table(newDataset$Class)
newDataset <- oversample(datos_1, ratio = 0.9, method = "SLMOTE")
table(newDataset$Class)
newDataset <- oversample(datos_1, ratio = 0.95, method = "BLSMOTE")
table(newDataset$Class)
newDataset <- oversample(datos_1, ratio = 0.97, method = "BLSMOTE")
table(newDataset$Class)
newDataset <- oversample(datos_1, ratio = 0.99, method = "BLSMOTE")
newDataset <- oversample(datos_1, ratio = 0.98, method = "BLSMOTE")
##### Borderline-SMOTE ######
table(datos_1$Class)
newDataset <- oversample(datos_1, ratio = 0.98, method = "BLSMOTE")
newDataset <- oversample(datos_1, ratio = 0.97, method = "BLSMOTE")
table(newDataset$Class)
##### Safe-SMOTE ######
table(datos_1$Class)
newDataset <- oversample(datos_1, ratio = 0.9, method = "SLMOTE")
table(newDataset$Class)
newDataset <- oversample(datos_1, ratio = 0.97, method = "SLMOTE")
table(newDataset$Class)
imbalanceRatio(datos_1)
install.packages("UGRWO")
#porcentajes<-c(100,200,300,400,500,1000)
#for(x in 1:6){
#  cat(porcentajes[x],"\n")
semillas<-c(233,10,76554,7,2018,15,345,689,151,222,980,1050,5642,9,76,
25,73,82,100,842,99,45,900,250,21450,3450,2704,52,41,34,
19,71,84,101,850,95,40,1000,251,22450,4450,2804,53,43,35,
22,77,86,105,870,950,400,1002,253,11450,5540,8204,3,4,5)
##########################################################################
##  NCR                 SGB1 1-AIDP (20) y 0-AMAN (37)                  ##
##                         Crear train set y test set                   ##
##########################################################################
#Convertir la variable de salida en factor
sgb1$subtipo<-as.factor(sgb1$subtipo)
table(trainingSGBDes1$subtipo)
filas.entrenamiento <- createDataPartition(bdcov2$TIPO_PACIENTE, p = 0.7, list = FALSE)
cjuntoEntrenamiento <- bdcov2[filas.entrenamiento,]
cjuntoTest <- bdcov2[-filas.entrenamiento,]
table(cjuntoEntrenamiento)
prop.table(table)(cjuntoEntrenamiento)
table(cjuntoTest)
prop.table(table(cjuntoTest)
library(tidyverse)
bdcov <- read.csv("casos_covid.csv")
setwd("C:/Users/Janett/Downloads/Proyecto")
library(tidyverse)
bdcov <- read.csv("casos_covid.csv")
bdcov
bdcov2 <- bdcov %>% filter(ENTIDAD_RES == "27")
View(bdcov2)
library(caret)
library(dplyr)
bdcov2 <- bdcov2 %>%
mutate_at("TIPO_PACIENTE", factor)
filas.entrenamiento <- createDataPartition(bdcov2$TIPO_PACIENTE, p = 0.7, list = FALSE)
cjuntoEntrenamiento <- bdcov2[filas.entrenamiento,]
cjuntoTest <- bdcov2[-filas.entrenamiento,]
table(cjuntoEntrenamiento)
table(cjuntoEntrenamiento)
prop.table(table)(cjuntoEntrenamiento)
table(cjuntoEntrenamiento)
pred_1 <- predict(modeloArbolDecicion, bdcov2[-filas.entrenamiento,], type= "class")
library(rpart)
modeloArbolDecicion <- rpart(
TIPO_PACIENTE ~.,
data = bdcov2[filas.entrenamiento,])
modeloArbolDecicion
library(rpart.plot)
rpart.plot(modeloArbolDecicion)
pred_1 <- predict(modeloArbolDecicion, bdcov2[-filas.entrenamiento,], type= "class")
pred_1 <- predict(modeloArbolDecicion, newdata = bdcov2[-filas.entrenamiento,], type= "class")
Arbol2 = J48(TIPO_PACIENTE ~ ., data = cjuntoEntrenamiento  )
install.packages("RWeka")
#Segundo arbol de prueba j48
library(RWeka)
Arbol2 = J48(TIPO_PACIENTE ~ ., data = cjuntoEntrenamiento  )
bdcov2$TIPO_PACIENTE <- as.factor(bdcov2$TIPO_PACIENTE)
filas.entrenamiento <- createDataPartition(bdcov2$TIPO_PACIENTE, p = 2/3, list = FALSE)
prop.table(table(bdcov2$TIPO_PACIENTE))
setwd("C:/Users/Janett/Downloads/Codigos RStudio")
#Llamar el dataset original
ejemplo <- read.csv("SGBFinal16.csv")
setwd("C:/Users/Janett/Downloads/Proyecto")
filas.entrenamiento <- createDataPartition(bdcov2$TIPO_PACIENTE, p = 0.7, list = FALSE)
cjuntoEntrenamiento <- bdcov2[filas.entrenamiento,]
pred_1 <- predict(modeloArbolDecicion, newdata = cjuntoTest[,-1], type= "class")
pred_1 <- predict(modeloArbolDecicion, cjuntoTest[,-1], type= "class")
pred_1 <- predict(modeloArbolDecicion, cjuntoTest[,-3], type= "class")
pred_1 <- predict(modeloArbolDecicion, cjuntoTest[,-10], type= "class")
pred_1 <- predict(modeloArbolDecicion, cjuntoTest[,-7], type= "class")
pred_1 <- predict(modeloArbolDecicion, cjuntoTest[,-15], type= "class")
pred_1 <- predict(modeloArbolDecicion, cjuntoTest[,-2], type= "class")
